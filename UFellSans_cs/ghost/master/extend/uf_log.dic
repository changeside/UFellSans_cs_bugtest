//------------------------------------------------------------------------------
// File		:uf_log.dic
//
//			:Holds all log like things (kofi)
//
// Var		:kofiC
//			 backupPath
//------------------------------------------------------------------------------

OnCredits
{
	_p = OnRenderInterface("Credits","",6)
	"\_q\b2%(cmenu6)%(b)Credit card%(def)\n\n[half]%(_p)/
	%(buttons(2,'Go back','OnBag'))"
}
OnCredits_Array
{
	_arr = IARRAY
	_arr ,= "!|%(m)Dialogue writing/aid||||%(cmenu1)"
	_arr ,= "!|Sorin||||"
	_arr ,= "!|Galla|THREE|||"
	_arr ,= "!|Change|THREE2|||"
	_arr ,= "!|%(m)Bug tester||||%(cmenu1)"
	_arr ,= "!|Sorin||||"
	_arr ,= "!|Tabuschka|THREE|||"
	_arr ,= "!|Leaf|THREE2|||"
	_arr ,= "!|%(m)%(st)Everything else%(stoff) Art/Programming/etc.||||%(cmenu1)"
	_arr ,= "!|Change||||"
	_arr
}

//------------------------------------------------------------------------------
// Function		:OnKofi_*|kofisup|kofishoutout
//
//				:Kofi related functions.
//------------------------------------------------------------------------------
kofisup : nonoverlap //List of all Ko-Fi supporter names
{
	"bluebutt"
	"carani"
	"lemonadeparty"
	"knight_of_kylo"
	"queen lethargy"
	"somebody"
	"valmunify"
	"plantcat"
	"chalk"
	"splyych"
	"nitritre"
	"djdusk"
	"snugglyj"
	"sinzskillington"
	"miera"
}
kofishoutout : nonoverlap //Dialogue for Ko-Fi thanks
{
	"(s_0)\i[102]%(m)i ain't too fond o' people, but... (s_1)\i[204]\i[305]%(kofisup) sounds pretty nice."
	"(s_0)\i[301]%(m)i'm supposed to say that %(kofisup) is a... (s_0)\i[107]\i[302] hella rad person.\n\n(s_1)\i[102]%(m)can't argue with that."
	"(s_0)\i[102]%(m)there's been rumors %(kofisup) is (s_0)\i[301]made o' money.\n\n(s_0)\i[112]\i[203]%(m)glad they helped pay off my tab."
	"(s_0)%(m)%(kofisup) really helped a pal out here.\n\n%(m)\i[105]\i[202]should meet 'em in grillby's sometime.\n\n(s_0)\i[301]%(m)they're payin' though.%(ARRADD('grillby','barname'))"
	"(s_0)\i[105]\i[301]%(m)huh. my tab ain't even that large anymore.\n\n(s_0)\i[102]%(m)thanks %(kofisup)."
	"(s_0)\i[112]\i[202]%(m)been able ta afford an extra meal recently thanks to %(kofisup)..."
}
OnKofi_Menu //@uf_inventory.dic
{
	_cur = IARRAY
	if reference0 == "goals";
		_cur = ("main","Met",OnKofi_Finished)
	else;
		_cur ,= ("goals","Next",OnKofi_Goals)
	if kofiC > 0;
		_cur ,= "\_l[0,125]Amount of Ko-Fi:\n    >%(lightup)%(kofiC)%(def)"
	
	"\_q\b2\_l[70]%(_cur[1]) Ko-Fi dev goals:/
	\n\n[half]/
	%(_cur[2])%(_cur[3])/
	\_l[205,125]%(cmenubar)\![*]\q[Toggle,OnKofi_Menu,%(_cur[0])]/
	%(buttons(2,'Go back','OnBag'))"
}
OnKofi_Goals
{
	"Currently none unless there is new interest!\n\n/
	Big thanks from Sans and the dev for all your donations <3"
}
OnKofi_Finished
{
	"%(lightup)/
		7 Ko-Fi's - Phone calls with sprites (Papyrus edition)\n\n[half]/
		15 Ko-Fi's - More user based dialog\n\n[half]/
		20 Ko-Fi's - Shop Extension/
	%(def)"
}
OnKofi_Buy //@uf_inventory.dic
{
	if totalinfo[0] >= 10; _time = "fer a shit ton of time"
	elseif totalinfo[0] >= 1; _time = "fer too long"
	else; _time = "from time to time"
	--
	"\b4(s_0)\i[102]%(m)ok so. (s_0)\i[105]\i[302]since ya' decided to keep me 'ere %(_time) %(nickname), /
	(s_0)\i[201]\i[302]i can't pay back a... %(it)pal%(itoff) of mine.\n\n[half]/
	%(m)but... (s_0)\i[203]\i[301]ya' could help me pay off that tab. /
	(s_0)\i[114]\i[203]howzit sound?\n\n/
	(s_1)\i[102]\i[203]%(m)you could even leave yer name so i know who to thank. /
	(s_0)\i[114]\i[203]tell yer friends wouldya?(s_0)\i[106]\i[201]\i[400]/
	\_q\n\n/
	%(m)(Ko-Fi/Patreon supporters' ideas or notes for Sans will hold priority.)/
	\n\n[half]/
	\_a[https://ko-fi.com/change]%(m)(Click here to open the Ko-Fi Page.)\_a\n/
	   -----------------------------------------\n/
	%(m)(Instead. If you have the resources, /
	you can \_a[https://www.patreon.com/changeside]join my Patreon\_a /
	to get access to earlier updates and more.)/
	%(buttons(4,'Go back','OnShop'))"
}
OnKofi_Counter
{
	/*	//Command for getting the Ko-Fi Counter.
		"\![execute,http-get,https://ko-fi.com/widget/counterwidget/B0B1EAGS,--async=OnKofi_Counter,--file=kofi.txt,--nodescript]"
	*/
	
	kofiC = ""
	
	if FOPEN(reference3,'r')
	{
		while (_buff = FREAD(reference3)) != -1
		{
			if _buff != '' && 'koficounter-value' _in_ _buff
			{
				kofiC = _buff						//read buffered line in
				kofiC = SPLIT(kofiC,">")			//Split line in span class 2 parts
				kofiC = TOSTR(kofiC[1])				//take out "number</span" part & convert
				kofiC = REPLACE(kofiC,"</span","")	//delete the "</span" part
				kofiC = TOINT(kofiC)				//convert to int
				break
			}
		}
	}
	FCLOSE(reference3)
}

//------------------------------------------------------------------------------
// Feedback text
//------------------------------------------------------------------------------
OnBug_Feedback //@uf_inventory.dic
{
	"\b2\_q/
	%(m)(If you have suggestions, want to shoot the creator a message, offer feedback or report bugs, click the link below and write your concerns.)\n/
		\_l[70]\_a[https://goo.gl/forms/FGbUI4VUUizOwh303]goo.gl/forms\_a/
	\n/
	%(m)(This whole thing is entirely anonymous and the developer will not be able to reply except an email is left behind!)\n/
	%(m)(Otherwise please go to \_a[http://changeside.tumblr.com]the devs tumblr\_a and leave an ask.)/
	%(buttons(2,'Go back','OnBag'))"
}

//------------------------------------------------------------------------------
// Back up functions
//------------------------------------------------------------------------------
OnBackup_Menu //@uf_menu.dic
{
	"\b4\_q\_l[80]Save File Backup\n\n\n/
	%(cmenu6)	- Current path - \n/
	%(lightup)	%(backupPath)%(cdef)\n\n\n%(def)/
	\![*]\q[Change Path,OnBackup_Define]\n/
    \![*]\q[Save file,OnBackup_Save]\n/
	\![*]\q[Load a save file,OnBackup_LoadOther]\n/
	%(buttons(4,'Cancel','script\e','Go back','OnConfig'))"
}
OnBackup_Define
{
	if _argv[0] == "boot"; "\C\![open,dialog,save,--id=OnBackup_PathBOOT,--title=Save your progress,--filter=Config file(cfg)|*.cfg,--ext=cfg]"
	else; "\C\![open,dialog,save,--id=OnBackup_Path,--title=Save your progress,--filter=Config file(cfg)|*.cfg,--ext=cfg]"
}
OnBackup_PathBOOT { backupPath = reference2 }
OnBackup_Path
{
	backupPath = reference2
	OnBackup_Menu
}
OnBackup_Save
{
	SAVEVAR()
	_text = ""
	_path = "/yaya_variable.cfg"
	_copy = IARRAY
	_open = FOPEN(_path , "r")
	_fline = FREAD(_path)
	
	//while not at end of file
	while _fline != -1
	{
		//copy the file
		_copy ,= _fline
		_fline = FREAD(_path)
	}

	FCLOSE(_path)

	_open = FOPEN(backupPath , "w")
	foreach _copy ; _line
	{
		FWRITE(backupPath , _line)
	}
	
	FCLOSE(backupPath)
	
	if _argv[0] == "load";
		"\c\0(s_0)\i[102]\i[298]%(m)(Loaded the backup.)/
		%(pause)%(OnBackup_Menu)"
	elseif _argv[0] == "close"; ""
	else;
		"\0(s_0)\i[102]\i[298]%(m)(Saved the backup.)/
		%(pause)%(OnBackup_Menu)"
}
OnBackup_LoadOther
{
	"\C\![open,dialog,open,--id=OnBackup_Load,--title=Save your progress,--filter=Config file(cfg)|*.cfg,--ext=cfg]"
}
OnBackup_Load
{
	_open = FOPEN(reference2,"r")
	_fline = FREAD(reference2)
	_old = 0
	while _fline != -1 //while not at end of file
	{
		_out += _fline
		if "Version" _in_ _fline { 
			_ver = TOREAL( SUBSTR(_fline,8,8) )
			if _ver < 2.000000 {
				_old = 1; 
				break
			}
		}
		_fline = FREAD(reference2)
	}
	if _old; OnVariable_Conversion(reference2)
	else {
		//load regular backup	
		_open = FCOPY(reference2,"/")
		_open = FCLOSE(reference2)
		_open = FOPEN("/yaya_variable.cfg")	//delete current file
		_open = FDEL("/yaya_variable.cfg")
		_open = FCLOSE("/yaya_variable.cfg")
		_name = "/" + SPLITPATH(reference2)[2] + ".cfg"
		_open = FOPEN(_name,"r")
		_open = FRENAME(_name,"/yaya_variable.cfg")
		RESTOREVAR()
	}
	--
	OnBackup_Menu
}
//------------------------------------------------------------------------------
// Variable conversion (from old ver.)
//------------------------------------------------------------------------------
OnVariable_Conversion
{
		//vars that need to be reset first
	passmintotal = 0
	countAr[3] = 0
	invAr = IARRAY
	//convert and save in new file copy
	_open = FCOPY(_argv[0],"/")
	_open = FCLOSE(_argv[0])
	_name = "/" + SPLITPATH(_argv[0])[2] + ".cfg"
	_open = FOPEN(_name,"r")
	_fline = FREAD(_name)

	while _fline != -1
	{
		_var = SPLIT(_fline,",")
		OnVariable_Fix(_var[0],_var[1])
		_fline = FREAD(_name)
	}

	//Erasure of tempvars
	if ARRINFO("user","socks") {
		ERASE("togglesock")
		"\p[298]\s[-1]"
	}

	//delete backup copy and save new  vars after modification
	_open = FCLOSE(_name)
	_open = FDEL(_name)
	
	SAVEVAR()
}
OnVariable_Fix
{
	//_argv[0] = old name
	//_argv[1] = old value
	
	_nb = TOINT(_argv[1]) //for int values
	_string = RE_REPLACE(_argv[1],'^"|"$','')
	_arr = SPLIT(_argv[1],":") //for array values
	_empty = ASEARCHEX("IARRAY",_arr)
		if _empty == ARRAYSIZE(_arr); _arr = IARRAY
		//fix array values
		for _i = 0; _i < ARRAYSIZE(_arr); _i++ {
			if RE_MATCH(_arr[_i],'^".*"$'); _arr[_i] = RE_REPLACE(_arr[_i],'^"|"$','') //string
			if _arr[_i] == "IARRAY"; _arr[_i] = IARRAY
		}
		//fix old arr values
		if ASEARCH("occupation",_arr); _arr[ASEARCH("occupation",_arr)] = "job"
	
	case _argv[0] {
		when "aitalkinterval"; aitalkinterval = _nb
		when "ghostupmin_last"; ghostupmin_last = _nb
		when "rudeuser"; countAr[6] = _nb
		when "kinduser"; countAr[5] = _nb
		when "boringuser"; countAr[7] = _nb
		when "loneruser"; countAr[2] = _nb
		when "jokesTopic"; jokestopicAr = _arr
		when "badjoketold"; jokesTold[0] = _nb
		when "brightjoketold"; jokesTold[1] = _nb
		when "daystreak"; daystreak = _nb
		when "timenotif"; hourremindtrue = _nb
		when "phoneok" {
			if _nb == 1; ARRADD_0('inv','phone,1,-1')
		}
		when "money"; money = _nb
		when "passallhour"; passmintotal += (_nb * 60)
		when "passallmin"; passmintotal += _nb
		when "affection"; affection = _nb
		when "dating"; datetrue = _nb
		when "knowgrillby"; grillbyAr = _arr
		when "knowpapyrus"; papyrusAr = _arr
		when "knowasgore"; asgoreAr = _arr
		when "knowalphys"; alphysAr = _arr
		when "knowundyne"; undyneAr = _arr
		when "knowflowey"; floweyAr = _arr
		when "username"; username = _string
		when "userbirthday" {
			if STRLEN(_string) > 4 {
				_temp = RE_SPLIT(_string,'month |day')
				userbirthday[0] = _temp[1]
				userbirthday[1] = _temp[0]
			}
		}
		when "pettimes"; countAr[0] = _nb
		when "userhabits"; userAr = _arr
		when "nightboot"; countAr[3] += _nb
		when "morningboot"; countAr[3] -= _nb
		when "realclose"; countAr[4] = _nb
		when "weirdseasons"; upperworld = !_nb
		when "snowCount" {
			if _nb > 0; ARRADD_0("inv","snow,1,-1")
		}
		when "askButton","aksButton" {
			if _nb == 1; ARRADD_0("inv","askbutton,1,-1")
		}
		when "mustardCount" {
			if _nb > 0 && !INV("mustard")[0]; ARRADD_0("inv","mustard,%(_nb),-1")
			elseif _nb > 0; INV_1("mustard",_nb)
		}
		when "mustardGiven" {
			if _nb > 0 && !INV("mustard")[0]; ARRADD_0("inv","mustard,0,%(_nb)")
			elseif _nb > 0; INV_2("mustard",_nb)
		}
		when "givemustard" {
			if _nb == 1 && !INV("mustard")[0]; ARRADD_0("inv","mustard,0,0")
			elseif _nb == 1 && INV("mustard")[2] == -1; INV_2("mustard",0)
		}
		when "foodCount" {
			if _nb > 0 && !INV("food")[0]; ARRADD_0("inv","food,%(_nb),-1")
		}
		when "painKillers" {
			if _nb > 0 && !INV("painmeds")[0]; ARRADD_0("inv","painmeds,%(_nb),0")
			elseif _nb > 0; INV_1("painmeds",_nb)
		}
		when "painKillersGiven" {
			if _nb > 0 && !INV("painmeds")[0]; ARRADD_0("inv","painmeds,0,%(_nb)")
			elseif _nb > 0; INV_2("painmeds",_nb)
		}
		when "redRose" {
			if _nb == 1; ARRADD_0("inv","rose,1,0") //not given
			if _nb == 2; ARRADD_0("inv","rose,0,1") //given
		}
		when "costumey" {
			if _nb == 1 {
				ARRADD_0("inv","costume,1,-1")
				"\p[297]\s[-1]"
			} 
		}
		when "darkhumoron" {
			if _nb; jokestopicAr = IARRAY
		}
		when "note" {
			if _nb == 1 {
				ARRADD_0("inv","kofinote,1,-1")
				"\p[299]\s[-1]"
			} 
		}
		when "colorenable"; colortrue = _nb
	}
}